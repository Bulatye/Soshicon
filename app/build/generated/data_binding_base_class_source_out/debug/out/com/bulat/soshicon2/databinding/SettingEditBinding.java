// Generated by view binder compiler. Do not edit!
package com.bulat.soshicon2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bulat.soshicon2.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView cancelEditProfile;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout containerSettingEdit;

  @NonNull
  public final TextInputLayout emailField;

  @NonNull
  public final TextInputLayout passwordField;

  @NonNull
  public final Button saveChangeBtn;

  @NonNull
  public final TextInputLayout statusField;

  @NonNull
  public final TextInputLayout usernameField;

  private SettingEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView cancelEditProfile, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout containerSettingEdit, @NonNull TextInputLayout emailField,
      @NonNull TextInputLayout passwordField, @NonNull Button saveChangeBtn,
      @NonNull TextInputLayout statusField, @NonNull TextInputLayout usernameField) {
    this.rootView = rootView;
    this.cancelEditProfile = cancelEditProfile;
    this.constraintLayout = constraintLayout;
    this.containerSettingEdit = containerSettingEdit;
    this.emailField = emailField;
    this.passwordField = passwordField;
    this.saveChangeBtn = saveChangeBtn;
    this.statusField = statusField;
    this.usernameField = usernameField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.setting_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelEditProfile;
      ImageView cancelEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (cancelEditProfile == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      ConstraintLayout containerSettingEdit = (ConstraintLayout) rootView;

      id = R.id.emailField;
      TextInputLayout emailField = ViewBindings.findChildViewById(rootView, id);
      if (emailField == null) {
        break missingId;
      }

      id = R.id.passwordField;
      TextInputLayout passwordField = ViewBindings.findChildViewById(rootView, id);
      if (passwordField == null) {
        break missingId;
      }

      id = R.id.saveChangeBtn;
      Button saveChangeBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveChangeBtn == null) {
        break missingId;
      }

      id = R.id.statusField;
      TextInputLayout statusField = ViewBindings.findChildViewById(rootView, id);
      if (statusField == null) {
        break missingId;
      }

      id = R.id.usernameField;
      TextInputLayout usernameField = ViewBindings.findChildViewById(rootView, id);
      if (usernameField == null) {
        break missingId;
      }

      return new SettingEditBinding((ConstraintLayout) rootView, cancelEditProfile,
          constraintLayout, containerSettingEdit, emailField, passwordField, saveChangeBtn,
          statusField, usernameField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
